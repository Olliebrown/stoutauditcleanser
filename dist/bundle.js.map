{
  "version": 3,
  "sources": ["../src/logger.js", "../src/index.js"],
  "sourcesContent": ["// Factory that generates a colorful logger object function-like object\nexport function makeLogger (label, backgroundColor, textColor) {\n  const newLogger = logger.bind(this, label, backgroundColor, textColor)\n  newLogger.error = error.bind(this, label, backgroundColor, textColor)\n  return newLogger\n}\n\n// A colorful, easy to spot logger.  Only output if built in dev mode.\nfunction logger (label, backgroundColor, textColor, ...rest) {\n  if (_DEV_) {\n    console.log(`%c[[${label}]]`, `background: ${backgroundColor}; color: ${textColor}`, ...rest)\n  }\n}\n\n// A colorful, easy to spot error logger. Outputs in all modes\nfunction error (label, backgroundColor, textColor, ...rest) {\n  console.error(`%c[[${label}]]`, `background: ${backgroundColor}; color: ${textColor}`, ...rest)\n}\n", "import { makeLogger } from './logger.js'\n\nconst LOG = makeLogger('AUDIT_CLEANER', 'yellow', 'purple')\nconst MAX_RETRIES = 10\n\n// Get list of header nodes for all major tables on page\nfunction getProgramNodes () {\n  const headerSelector = '[id*=\"DERIVED_SAA_DPR_GROUPBOX1GP\"]'\n  const headers = Array.from(document.querySelectorAll(headerSelector))\n\n  // Extract the nodes that contain the program headers\n  const generalRegEx = /(?:UNIVERSITY REQUIREMENTS)|(?:GENERAL INFORMATION)/i\n  const programNodes = headers.filter((header) => (\n    !header.textContent.match(generalRegEx))\n  )\n\n  return programNodes\n}\n\nasync function getMainProgram (programNode) {\n  // Expand main program if it is not already\n  const expander = programNode.querySelector('a[aria-expanded=false]')\n  if (expander) {\n    LOG('Clicking expander')\n    expander.click()\n  }\n\n  // Try several times to retrieve the proper node\n  const programRoot = programNode.parentNode.parentNode.parentNode\n  const descendIntoMadness = 'tr:nth-child(2) > td tbody > tr:nth-child(2) > td:nth-child(2) tbody > tr:nth-child(2) td tbody > tr:nth-child(5) > td:nth-child(2) tbody tbody'\n  let tries = 0\n  while (tries < MAX_RETRIES && programRoot.querySelector(descendIntoMadness) === null) {\n    await wait(1000)\n    tries++\n  }\n\n  // Did we get it?\n  const mainTable = programRoot.querySelector(descendIntoMadness)\n  if (!mainTable) {\n    throw new Error('Max retries exceeded')\n  } else {\n    return mainTable\n  }\n}\n\n// Generic function to wait\nfunction wait (timeout) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => { resolve() }, timeout)\n  })\n}\n\n// Start primary function\nasync function main () {\n  const programNodes = getProgramNodes()\n  if (!Array.isArray(programNodes) || programNodes.length < 1) {\n    LOG.error('Failed to find program nodes')\n  } else {\n    try {\n      const mainProgram = await getMainProgram(programNodes[0])\n      LOG('Main Program is', mainProgram)\n    } catch (err) {\n      LOG.error('Failed to retrieve main program', err)\n    }\n  }\n}\nmain()\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AACO,sBAAqB,OAAO,iBAAiB,WAAW;AAC7D,UAAM,YAAY,OAAO,KAAK,MAAM,OAAO,iBAAiB,SAAS;AACrE,cAAU,QAAQ,MAAM,KAAK,MAAM,OAAO,iBAAiB,SAAS;AACpE,WAAO;AAAA,EACT;AAGA,kBAAiB,OAAO,iBAAiB,cAAc,MAAM;AAC3D,QAAI,MAAO;AACT,cAAQ,IAAI,OAAO,WAAW,eAAe,2BAA2B,aAAa,GAAG,IAAI;AAAA,IAC9F;AAAA,EACF;AAGA,iBAAgB,OAAO,iBAAiB,cAAc,MAAM;AAC1D,YAAQ,MAAM,OAAO,WAAW,eAAe,2BAA2B,aAAa,GAAG,IAAI;AAAA,EAChG;;;ACfA,MAAM,MAAM,WAAW,iBAAiB,UAAU,QAAQ;AAC1D,MAAM,cAAc;AAGpB,6BAA4B;AAC1B,UAAM,iBAAiB;AACvB,UAAM,UAAU,MAAM,KAAK,SAAS,iBAAiB,cAAc,CAAC;AAGpE,UAAM,eAAe;AACrB,UAAM,eAAe,QAAQ,OAAO,CAAC,WACnC,CAAC,OAAO,YAAY,MAAM,YAAY,CACxC;AAEA,WAAO;AAAA,EACT;AAEA,0BAA+B,aAAa;AAAA;AAE1C,YAAM,WAAW,YAAY,cAAc,wBAAwB;AACnE,UAAI,UAAU;AACZ,YAAI,mBAAmB;AACvB,iBAAS,MAAM;AAAA,MACjB;AAGA,YAAM,cAAc,YAAY,WAAW,WAAW;AACtD,YAAM,qBAAqB;AAC3B,UAAI,QAAQ;AACZ,aAAO,QAAQ,eAAe,YAAY,cAAc,kBAAkB,MAAM,MAAM;AACpF,cAAM,KAAK,GAAI;AACf;AAAA,MACF;AAGA,YAAM,YAAY,YAAY,cAAc,kBAAkB;AAC9D,UAAI,CAAC,WAAW;AACd,cAAM,IAAI,MAAM,sBAAsB;AAAA,MACxC,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAGA,gBAAe,SAAS;AACtB,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,iBAAW,MAAM;AAAE,gBAAQ;AAAA,MAAE,GAAG,OAAO;AAAA,IACzC,CAAC;AAAA,EACH;AAGA,kBAAuB;AAAA;AACrB,YAAM,eAAe,gBAAgB;AACrC,UAAI,CAAC,MAAM,QAAQ,YAAY,KAAK,aAAa,SAAS,GAAG;AAC3D,YAAI,MAAM,8BAA8B;AAAA,MAC1C,OAAO;AACL,YAAI;AACF,gBAAM,cAAc,MAAM,eAAe,aAAa,EAAE;AACxD,cAAI,mBAAmB,WAAW;AAAA,QACpC,SAAS,KAAP;AACA,cAAI,MAAM,mCAAmC,GAAG;AAAA,QAClD;AAAA,MACF;AAAA,IACF;AAAA;AACA,OAAK;",
  "names": []
}
